version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: sarai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sarai_db
      POSTGRES_USER: sarai_user
      POSTGRES_PASSWORD: sarai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - sarai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sarai_user -d sarai_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicação Sar.ai
  sarai-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: sarai-app
    restart: unless-stopped
    environment:
      # Configurações do banco de dados
      DATABASE_URL: "postgresql://sarai_user:sarai_password@postgres:5432/sarai_db"
      
      # Configurações da aplicação
      NODE_ENV: production
      PORT: 5000
      
      # Configurações de sessão
      SESSION_SECRET: ${SESSION_SECRET:-sua-chave-secreta-super-segura-aqui}
      
      # Configurações de email (SendGrid)
      SENDGRID_API_KEY: ${SENDGRID_API_KEY:-}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@sarai.com.br}
      
      # Configurações de domínio
      DOMAIN: ${DOMAIN:-localhost:5000}
      
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sarai-network
    volumes:
      # Volume para uploads e arquivos temporários
      - app_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para cache e sessões (opcional, para alta performance)
  redis:
    image: redis:7-alpine
    container_name: sarai-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - sarai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

networks:
  sarai-network:
    driver: bridge